#!/usr/bin/env bash
# shellcheck disable=SC2143,SC1090

set -eo pipefail
[[ $DEBUG ]] && set -x
set -o allexport

FPREFIX="=====>"
PREFIX="----->"
INDENT="      "

main() {
  tail -f /dev/null
}

deploy() {
  declare cmd="deploy"
  [[ "$1" == "$cmd" ]] && shift 1

  REPO_PATH="$1"
  REPO_NAME=$(basename "$REPO_PATH")
  ENV_FILE="${REPO_PATH}/${BACKPLANE_ENV_FILE:-.env}"
  COMPOSE_FILE="${REPO_PATH}/${BACKPLANE_COMPOSE_FILE:-docker-compose.yml}"

  cd $REPO_PATH

  echo "Starting deployment"
  echo "- Backplane environment: $BACKPLANE_ENVIRONMENT"
  echo "- Backplane domain: $BACKPLANE_DOMAIN"
  echo "- Compose file: $COMPOSE_FILE"
  echo "- Env file: $ENV_FILE"

  echo ""

  if [[ -f $ENV_FILE ]]; then
    echo "Populating config from $ENV_FILE"
    set -o allexport
    source "$ENV_FILE"
    set +o allexport
  else
    echo "No Env file found at $ENV_FILE"
  fi

  echo ""

  if [[ -f $COMPOSE_FILE ]]; then
    COMPOSE_CONFIG=$(sudo docker-compose config)

    if [[ ! -z $(echo "$COMPOSE_CONFIG" | grep -o "build:*") ]]; then
      # echo "$PREFIX Logging into local registry"
      # echo "$APOLLO_REGISTRY_PASSWORD" | docker login --password-stdin \
      #   -u "$APOLLO_REGISTRY_USER" \
      #   "$APOLLO_REGISTRY_URL"

      echo "Building $REPO_NAME"
      docker-compose build --parallel

      echo "Pushing $REPO_NAME"
      docker-compose push
    fi

    echo "Deploying '$REPO_NAME'"
    sudo docker-compose -f "$COMPOSE_FILE" -p "$REPO_NAME" --env-file "$ENV_FILE" up -d
  else
    echo "No Compose file found at $COMPOSE_FILE"
    exit 1
  fi
  echo "Deployment finished"
  echo ""
}

"$@"