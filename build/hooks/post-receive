#!/usr/bin/env bash
# shellcheck disable=SC1091

set -eo pipefail
[[ $DEBUG ]] && set -x

REPO_SRC=$PWD

REPO_BASE=$(basename "$REPO_SRC")
REPO_NAME=${REPO_BASE/.git/}
REPO_DEST=/backplane/.backplane/apps/$REPO_NAME
COMMIT_HASH=$(git rev-parse --short=6 HEAD)

echo "Received repository"
echo "- Name: $REPO_NAME"
echo "- Path: $REPO_SRC"
echo "- Commit: $COMMIT_HASH"

echo ""

echo "Preparing deployment"

[[ $REPO_NAME == "" ]] && exit 1

if [ -d "$REPO_DEST" ]; then
  echo "- Deployment for $REPO_NAME already exists"
  echo "- Pulling changes ..."
  pushd "$REPO_DEST" >/dev/null
  unset GIT_DIR
  git pull || exit 1
  popd >/dev/null
else
  echo "- Creating deployment for $REPO_NAME"
  git clone -q "$REPO_SRC" "$REPO_DEST" || exit 1
  chown -R "git:git" "$REPO_SRC" "$REPO_DEST"
fi

echo ""
# TODO: On docker error, abort git push.
# Now it pushes successfully even when a deployment fails
#[[ $REPO_NAME == "deployer" ]] && exit 0

# TODO: accept and deploy CI builds
#swarmlet deploy "$REPO_DEST" || exit 1

/usr/local/bin/backplane install "$REPO_NAME" "$REPO_DEST" || exit 1

exit 0